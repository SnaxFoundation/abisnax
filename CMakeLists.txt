# copyright defined in abisnax/LICENSE.txt

cmake_minimum_required (VERSION 3.11)
project(abisnax VERSION 0.1 LANGUAGES CXX)

FIND_PACKAGE(Boost 1.58 REQUIRED COMPONENTS date_time)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

add_library(abisnax MODULE src/abisnax.cpp)
target_include_directories(abisnax PUBLIC external/rapidjson/include PRIVATE ${Boost_INCLUDE_DIR})
target_link_libraries(abisnax Boost::date_time)

add_executable(test src/test.cpp src/abisnax.cpp)
target_include_directories(test PUBLIC external/rapidjson/include PRIVATE ${Boost_INCLUDE_DIR})
target_link_libraries(test Boost::date_time)

add_executable(test-sanitize src/test.cpp src/abisnax.cpp)
target_include_directories(test-sanitize PUBLIC external/rapidjson/include PRIVATE ${Boost_INCLUDE_DIR})
target_link_libraries(test-sanitize Boost::date_time -fno-omit-frame-pointer -fsanitize=address,undefined)
target_compile_options(test-sanitize PUBLIC -fno-omit-frame-pointer -fsanitize=address,undefined)

# add_executable(fuzzer src/fuzzer.cpp src/abisnax.cpp)
# target_include_directories(fuzzer PUBLIC external/rapidjson/include PRIVATE ${Boost_INCLUDE_DIR})
# target_link_libraries(fuzzer Boost::date_time)
# target_link_libraries(fuzzer -fsanitize=fuzzer,address,undefined,signed-integer-overflow -fstandalone-debug)
# target_compile_options(fuzzer PRIVATE -fsanitize=fuzzer,address,undefined,signed-integer-overflow -fstandalone-debug)

if (CMAKE_CXX_COMPILER_ID MATCHES "Clang")
    target_compile_options(abisnax PRIVATE -Wall -Wextra -Wno-unused-parameter)
    target_compile_options(test PRIVATE -Wall -Wextra -Wno-unused-parameter)
endif()
